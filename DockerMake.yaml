base:
    FROM: ubuntu:14.04

proxy:
    requires: 
    - base
    build: |
        # do not update this line
        ENV PIP_DOWNLOAD_CACHE=/opt/stack/pip-cache
        RUN mkdir -p -m 777 /opt/stack/pip-cache
        
        # if you have a local pip or apt chace update these vaules settins or comment out with #
        ENV PIP_INDEX_URL=http://192.168.1.10:3141/root/pypi/+simple/
        ENV PIP_TRUSTED_HOST=192.168.1.10
        RUN echo 'Acquire::HTTP::Proxy "http://192.168.1.10:3142";' > /etc/apt/apt.conf ; \
            echo 'Acquire::HTTPS::Proxy "false";' >> /etc/apt/apt.conf

        #NOTE: the protocol http(s):// should be included in the proxy vairable and wildcards '*' 
        #      should not be used in no proxy.

        #ENV http_proxy=http://<proxy>:<port>
        #ENV https_proxy=https://<proxy>:<port>
        #ENV no_proxy=
        #ENV HTTP_PROXY=http://<proxy>:<port>
        #ENV HTTPS_PROXY=https://<proxy>:<port>
        #ENV NO_PROXY=

        RUN apt-get update ; apt-get upgrade -y ; apt-get install -y software-properties-common \
            python-software-properties ; apt-get autoclean
        RUN add-apt-repository -y cloud-archive:liberty ; apt-get update; apt-get upgrade; apt-get install -f -y

tools:
    requires: 
    - proxy
    build: |
        RUN  apt-get install -y --no-install-recommends nano wget git socat tshark git mc netcat iperf \
             iproute net-tools build-essential python python3 python-dev python3-dev htop \
             openssh-client && apt-get autoclean

freerds:
    requires: 
    - tools
    build_directory: freerds
    build: |
        RUN apt-get install -qy --force-yes --no-install-recommends \ 
            cmake xorg; apt-get autoclean
        COPY prep.sh prep.sh
        RUN chmod +x prep.sh ; ./prep.sh 
        COPY build.sh build.sh
        RUN chmod +x build.sh ; ./build.sh 
        COPY freerds.conf /etc/supervisor/conf.d/freerds.conf

user:
    requires: 
    - proxy
    build: |
        RUN useradd --shell /bin/bash --create-home tester ; echo tester:tester | chpasswd
        RUN echo "tester    ALL=(ALL:ALL) ALL" | tee -a /etc/sudoers

init:
    requires: 
    - proxy
    build_directory: init
    build: |
        RUN apt-get install -y --no-install-recommends supervisor; apt-get autoclean
        COPY init.conf /etc/supervisor/conf.d/init.conf
        CMD ["supervisord","-n"]
        EXPOSE 3389
lxde:
    requires: 
    - proxy
    build_directory: lxde
    build: |
        RUN apt-get install -y --no-install-recommends \
            lxde-core bash lxterminal ; apt-get autoclean

kde:
     requires:
     - proxy
     build_directory: kde
     build: |
        RUN apt-get install -y --no-install-recommends kde-plasma-desktop && apt-get autoclean

devtools:
     requires:
     - tools
     - user
     build: |
        RUN apt-get install -y --no-install-recommends apt-transport-https ca-certificates firefox; apt-get autoclean
        RUN apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D ; \
            add-apt-repository -y "deb https://apt.dockerproject.org/repo ubuntu-trusty main"; \
            apt-get update ; apt-get -y install docker-engine; apt-get autoclean ; usermod -aG docker tester
        RUN apt-get install -y --no-install-recommends  default-jdk && apt-get autoclean
        RUN wget  https://d1opms6zj7jotq.cloudfront.net/idea/ideaIC-15.0.3.tar.gz ; \
            tar -xvf ideaIC-15.0.3.tar.gz ; rm ideaIC-15.0.3.tar.gz ; mv idea-IC-143.1821.5 /opt/idea; \
            chmod +x /opt/idea/bin/idea.sh; \
            echo -e "#!/bin/bash \n /opt/idea/bin/idea.sh > /dev/null &" > /usr/bin/idea; \
            chmod +x /usr/bin/idea
            
lxde-freerds:
    requires: 
    - tools
    - init
    - freerds
    - user
    - devtools
    - lxde

kde-freerds:
    requires: 
    - tools
    - init
    - freerds
    - user
    - devtools
    - kde

devstack-data:
    FROM: alpine:3.3
    build_directory: devstack
    build: |
        RUN apk add --no-cache git 
        RUN mkdir -p -m 777 /opt/stack/pip-cache ; git clone http://github.com/openstack-dev/devstack /opt/stack/devstack
        COPY local.conf /opt/stack/devstack/local.conf
        VOLUME ["/opt/stack"]
        CMD ["/bin/true"]

devstack:
    requires: 
    - tools
    - init
    build_directory: devstack
